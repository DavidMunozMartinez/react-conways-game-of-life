{"version":3,"sources":["components/canvas-component/CanvasComponent.service.ts","components/canvas-component/CanvasComponent.tsx","components/config-modal-component/ConfigModalComponent.tsx","App.tsx","reducers/ConfigReducer.ts","index.tsx"],"names":["CanvasService","operations","patterns","glider","pulsar","x","y","fillFn","Array","from","val","i","j","canvas","newCanvas","JSON","parse","stringify","aliveBros","forEach","neigbourX","neigbourY","inBoundsX","length","inBoundsY","source","pattern","this","canvasService","CanvasComponent","props","config","useSelector","state","dispatch","useDispatch","useState","running","setRunning","makeCanvas","Math","random","setCanvas","callablesSetter","callables","toggle","type","data","prop","value","runningRef","current","simulate","randomize","chance","next","nextGeneration","clear","example","name","getPattern","indexOf","console","log","xChanged","yChanged","needsReRender","useRef","speedRef","speed","useCallback","c","setTimeout","className","draggable","onContextMenu","e","preventDefault","query-selector","transition-time","transition-mode","override-styles","map","row","col","onMouseDown","mouseDown","onMouseEnter","event","clone","buttons","mouseEnter","ConfigModalComponenet","updateConfig","max","onChange","target","min","App","canvasCallables","showConfig","setShowConfig","ConfigModalComponent","class","onClick","defaultValue","placeholder","disabled","window","open","style","float","borderRadius","service","defaultState","reducers","combineReducers","action","newState","parseInt","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAAaA,EAAb,iDAIUC,WAAa,CACnB,EAAE,GAAI,GACN,EAAE,EAAG,GACL,EAAE,EAAG,GACL,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAZR,KAeUC,SAAW,CACjBC,OAAQ,CACN,MACA,MACA,MACA,MACA,OAEF,WAAY,CACV,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEF,WAAc,CACZ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QAEFC,OAAQ,CACN,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,QACA,UAvJN,8CAkKE,SAAWC,EAAGC,EAAGC,GACf,OAAOC,MAAMC,KAAKD,MAAMF,IAAI,SAACI,EAAKC,GAAN,OAAYH,MAAMC,KAAKD,MAAMH,IAAI,SAACK,EAAKE,GAAQ,OAAOL,EAAOK,EAAGD,WAnKhG,4BA2KE,SAAeE,GAGb,IAHmC,IAAD,OAC9BC,EAAyBC,KAAKC,MAAMD,KAAKE,UAAUJ,IADrB,WAGzBF,GACP,IAJgC,eAIvBC,GACP,IAAIM,EAAY,EAChB,EAAKjB,WAAWkB,SAAQ,YAAa,IAAD,mBAAVd,EAAU,KAAPC,EAAO,KAC9Bc,EAAYT,EAAIN,EAChBgB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","file":"static/js/main.95ee0a47.chunk.js","sourcesContent":["export class CanvasService {\n  /**Array of operations to calculate all 8 neighbour positions\n   * in a 2d Array.\n   */\n  private operations = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1]\n  ];\n\n  private patterns = {\n    glider: [\n      '2-0',\n      '2-1',\n      '2-2',\n      '1-2',\n      '0-1'\n    ],\n    'g-glider': [\n      \"24-0\",\n      \"22-1\",\n      \"24-1\",\n      \"12-2\",\n      \"13-2\",\n      \"20-2\",\n      \"21-2\",\n      \"34-2\",\n      \"35-2\",\n      \"11-3\",\n      \"15-3\",\n      \"20-3\",\n      \"21-3\",\n      \"34-3\",\n      \"35-3\",\n      \"0-4\",\n      \"1-4\",\n      \"10-4\",\n      \"16-4\",\n      \"20-4\",\n      \"21-4\",\n      \"0-5\",\n      \"1-5\",\n      \"10-5\",\n      \"14-5\",\n      \"16-5\",\n      \"17-5\",\n      \"22-5\",\n      \"24-5\",\n      \"10-6\",\n      \"16-6\",\n      \"24-6\",\n      \"11-7\",\n      \"15-7\",\n      \"12-8\",\n      \"13-8\"\n    ],\n    'cloverleaf': [\n      \"6-3\",\n      \"8-3\",\n      \"4-4\",\n      \"5-4\",\n      \"6-4\",\n      \"8-4\",\n      \"9-4\",\n      \"10-4\",\n      \"3-5\",\n      \"7-5\",\n      \"11-5\",\n      \"3-6\",\n      \"5-6\",\n      \"9-6\",\n      \"11-6\",\n      \"4-7\",\n      \"5-7\",\n      \"7-7\",\n      \"9-7\",\n      \"10-7\",\n      \"4-9\",\n      \"5-9\",\n      \"7-9\",\n      \"9-9\",\n      \"10-9\",\n      \"3-10\",\n      \"5-10\",\n      \"9-10\",\n      \"11-10\",\n      \"3-11\",\n      \"7-11\",\n      \"11-11\",\n      \"4-12\",\n      \"5-12\",\n      \"6-12\",\n      \"8-12\",\n      \"9-12\",\n      \"10-12\",\n      \"6-13\",\n      \"8-13\"\n    ],\n    pulsar: [\n      \"4-2\",\n      \"5-2\",\n      \"6-2\",\n      \"10-2\",\n      \"11-2\",\n      \"12-2\",\n      \"2-4\",\n      \"7-4\",\n      \"9-4\",\n      \"14-4\",\n      \"2-5\",\n      \"7-5\",\n      \"9-5\",\n      \"14-5\",\n      \"2-6\",\n      \"7-6\",\n      \"9-6\",\n      \"14-6\",\n      \"4-7\",\n      \"5-7\",\n      \"6-7\",\n      \"10-7\",\n      \"11-7\",\n      \"12-7\",\n      \"4-9\",\n      \"5-9\",\n      \"6-9\",\n      \"10-9\",\n      \"11-9\",\n      \"12-9\",\n      \"2-10\",\n      \"7-10\",\n      \"9-10\",\n      \"14-10\",\n      \"2-11\",\n      \"7-11\",\n      \"9-11\",\n      \"14-11\",\n      \"2-12\",\n      \"7-12\",\n      \"9-12\",\n      \"14-12\",\n      \"4-14\",\n      \"5-14\",\n      \"6-14\",\n      \"10-14\",\n      \"11-14\",\n      \"12-14\"\n  ]\n  }\n\n  /**\n   * Creates a 2D array with a specific x and y length, with specified values.\n   * @param x X value length for canvas\n   * @param y Y value length for canvas\n   * @param fillFn fill function that will assign values to each canvas position\n   * @returns New 2D Array filled with values based on the fill fn, else it returns empty values\n   */\n  makeCanvas(x, y, fillFn: (x: number, y: number) => any) {\n    return Array.from(Array(y), (val, i) => Array.from(Array(x), (val, j) => { return fillFn(j, i) }));\n  }\n\n  /**\n   * Calculates next generation based on Conway's game of life rules\n   * @param canvas 2D array that will be evaluated\n   * @returns new canvas with updated values\n   */\n  nextGeneration(canvas: boolean[][]) {\n    let newCanvas: boolean[][] = JSON.parse(JSON.stringify(canvas));\n\n    for (let i = 0; i < canvas.length; i++) {\n      for (let j = 0; j < canvas[i].length; j++) {\n        let aliveBros = 0;\n        this.operations.forEach(([x, y]) => {\n          let neigbourX = i + x;\n          let neigbourY = j + y;\n          // Check bounds\n          let inBoundsX = neigbourX >= 0 && neigbourX < canvas.length;\n          let inBoundsY = neigbourY >= 0 && (canvas[0] && neigbourY < canvas[0].length);\n          if (inBoundsX && inBoundsY) {\n            aliveBros = canvas[neigbourX][neigbourY] ? aliveBros + 1 : aliveBros;\n          }\n        });\n\n        // Update cell state\n        if (aliveBros < 2 || aliveBros > 3) {\n          newCanvas[i][j] = false;\n        }\n        else if (!canvas[i][j] && aliveBros === 3) {\n          newCanvas[i][j] = true;\n        }\n      }\n    }\n\n    return newCanvas;\n  }\n\n  /**\n   * Clones a given object\n   * @param source Object to clone\n   * @returns new instance of source object\n   */\n  clone(source: any) {\n    return JSON.parse(JSON.stringify(source));\n  }\n\n  getPattern(pattern: string): Array<String> {\n    if (this.patterns[pattern]) {\n      return this.patterns[pattern];\n    }\n  }\n}","import './Canvas.scss';\nimport { useState, useRef, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CanvasService } from './CanvasComponent.service';\nconst canvasService = new CanvasService();\nexport interface ICanvasCallables {\n  /**\n   * Turns simulation on/off\n   */\n  toggle: () => void,\n  /**\n   * Fills the canvas with random true/false values.\n   * @param chance defines the posibility of getting a true value\n   */\n  randomize: (chance: number) => void,\n  /**\n   * Clear the entire canvas.\n   */\n  clear: () => void,\n  /**\n   * Calculates next generation\n   */\n  next: () => void,\n  /**\n   * Renders example patterns\n   */\n  example: (pattern: string) => void\n}\n\nexport function CanvasComponent(props: { callablesSetter: any}) {\n  const config = useSelector((state: any) => state.config);\n  const dispatch = useDispatch();\n  const [running, setRunning] = useState(false);\n  const [canvas, setCanvas] = useState(() => {\n    return canvasService.makeCanvas(config.x, config.y, () => Math.random() > 0.7);\n  });\n\n  // Define all our canvas callables to send to parent\n  const toggle = () => {\n    setRunning(!running);\n    dispatch({type: 'update', data: { prop: 'running', value: !running }})\n    if (!running) {\n      runningRef.current = true;\n      simulate();\n    }\n  }\n  const randomize = (chance: number) => {\n    let newCanvas = canvasService.makeCanvas(config.x, config.y, () => Math.random() < chance);\n    setCanvas(newCanvas);\n  };\n  const clear = () => {\n    setRunning(false);\n    let newCanvas = canvasService.makeCanvas(config.x, config.y, () => false);\n    setCanvas(newCanvas);\n  }\n  const next = () => {\n    let newCanvas = canvasService.nextGeneration(canvas);\n    setCanvas(newCanvas);\n  }\n\n  const example = (name: string) => {\n    if (running) {\n      setRunning(false);\n      dispatch({type: 'update', data: {prop: 'running', value: false}});\n    }\n    dispatch({type: 'update', data: {prop: 'speed', value: 50}});\n    let pattern = canvasService.getPattern(name);\n    let newCanvas = canvasService.makeCanvas(config.x,config.y, (x, y) => {\n      return pattern.indexOf(`${x}-${y}`) > -1;\n    });\n    console.log(newCanvas);\n    setCanvas(newCanvas);\n  }\n  if (props.callablesSetter) {\n    let callables: ICanvasCallables = {\n      toggle: toggle,\n      randomize: randomize,\n      next: next,\n      clear: clear,\n      example: example\n    }\n    props.callablesSetter(callables);\n  }\n\n  // Check if config canvas size changed to re-render the canvas with different values\n  if (needsReRender()) {\n    const newCanvas = canvasService.makeCanvas(config.x, config.y, () => false);\n    setCanvas(newCanvas);\n  }\n\n  function mouseDown(i: number, j: number) {\n    const newCanvas = JSON.parse(JSON.stringify(canvas));\n    newCanvas[i][j] = !canvas[i][j];\n    console.log([j, i]);\n    setCanvas(newCanvas);\n  }\n\n  function mouseEnter(event: any, i: number, j: number) {\n    const newCanvas = canvasService.clone(canvas);\n    // If mouse left click is pressed toggle cells to true\n    if (event.buttons === 1) {\n      newCanvas[i][j] = true;\n    }\n    // If mouse right click is pressed toggle cells to false\n    if (event.buttons === 2) {\n      newCanvas[i][j] = false;\n    }\n    setCanvas(newCanvas);\n  }\n\n  /**\n   * Checks is the config size is different than the canvas size\n   * @returns boolean value\n   */\n  function needsReRender() {\n    let xChanged = canvas[0] && canvas[0].length !== config.x;\n    let yChanged = canvas.length !== config.y;\n    return xChanged || yChanged;\n  }\n\n  const runningRef = useRef(running);\n  const speedRef = useRef(config.speed);\n  runningRef.current = running;\n  speedRef.current = config.speed;\n  /**\n   * Runs simulation recursively until the running value is set to false\n   */\n  const simulate = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n    setCanvas(c => {\n      return canvasService.nextGeneration(c);\n    });\n    setTimeout(simulate, speedRef.current);\n  }, []);\n\n  // function printPattern() {\n  //   let pattern = [];\n  //   canvas.forEach((row, y) => {\n  //     row.forEach((col, x) => {\n  //       if (col) {\n  //         pattern.push(`${x}-${y}`);\n  //       }\n  //     });\n  //   });\n\n  //   console.log(pattern);\n  // }\n\n  return (\n    <>\n      <div className=\"CanvasComponent\" draggable=\"false\"\n        onContextMenu={(e) => { e.preventDefault(); }}>\n        <smart-hover query-selector=\".cell\" transition-time=\"100\" transition-mode=\"ease-out\" override-styles=\"true\" draggable=\"false\">\n          {canvas.map((row, i) => <div key={i} className=\"row\" draggable=\"false\">\n            {row.map((col, j) => <div key={`${i}-${j}`} className={`cell ${col ? 'alive' : ''}`} draggable=\"false\"\n              onMouseDown={() => { mouseDown(i, j) }}\n              onMouseEnter={(event) => { mouseEnter(event, i, j) }}> </div>\n            )}</div>\n          )}\n        </smart-hover>\n        {/* Only used to save patterns */}\n        {/* <button onClick={() => { printPattern() }}>Print pattern</button> */}\n      </div>\n    </>\n  );\n}\n","import './ConfigModal.scss';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ConfigModalComponenet() {\n\n  const config = useSelector((state: any) => state.config);\n  const dispatch = useDispatch();\n\n  function updateConfig(prop: any, value: any) {\n    dispatch({ \n      type: 'update',\n      data: {\n        prop: prop,\n        value: value\n      }\n    });\n  }\n\n  return (\n    <div className=\"ConfigModalComponent\">\n      <span>x: </span>\n      <input type=\"number\" max={60} value={config.x} onChange={(event) => { updateConfig('x', event.target.value) }} />\n      <span>y: </span>\n      <input type=\"number\" max={60} value={config.y} onChange={(event) => { updateConfig('y', event.target.value) }} />\n      <span> Speed:</span>\n      <input type=\"number\" min={100} value={config.speed} onChange={(event) => {updateConfig('speed', event.target.value) }}/>\n    </div>\n  );\n}\n\nexport default ConfigModalComponenet;","import './App.scss';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CanvasComponent, ICanvasCallables } from './components/canvas-component/CanvasComponent';\nimport ConfigModalComponent from './components/config-modal-component/ConfigModalComponent';\nimport { BsFillGearFill, BsPlayFill, BsPauseFill } from 'react-icons/bs';\nimport { FiGithub } from 'react-icons/fi';\nimport { IoIosArrowForward } from 'react-icons/io';\n\nfunction App() {\n  const [showConfig, setShowConfig] = useState(false);\n  const config = useSelector((state: any) => state.config);\n  let canvasCallables: ICanvasCallables;\n\n  // This feels ilegal but it works tho\n  function setCallables(service) {\n    canvasCallables = service;\n  }\n\n  return (\n    <div className=\"App\">\n\n      <div className={showConfig ? 'panel-show' : 'panel-hide'}>\n        <ConfigModalComponent></ConfigModalComponent>\n      </div>\n      <smart-hover query-selector=\".primary-btn\" class=\"app-header\" override-styles=\"true\">\n        <button className=\"primary-btn icon-btn\" onClick={() => { setShowConfig(!showConfig) }}>\n          <BsFillGearFill />\n        </button>\n        <button className=\"primary-btn icon-btn\" onClick={() => { canvasCallables.toggle() }}> {config.running ? <BsPauseFill /> : <BsPlayFill /> } </button>\n        <button className=\"primary-btn icon-btn\" onClick={() => { canvasCallables.next() }}> <IoIosArrowForward /> </button>\n        <button className=\"primary-btn text-btn\" onClick={() => { canvasCallables.clear() }}> Clear </button>\n        <button className=\"primary-btn text-btn\" onClick={() => { canvasCallables.randomize(0.3) }}> Random </button>\n        <select defaultValue=\"init\" placeholder=\"examples\" className=\"primary-btn\" onChange={(event) => { canvasCallables.example(event.target.value) }}>\n          <option value=\"init\" disabled>Cool examples</option>\n          <option value=\"glider\">Simple glider</option>\n          <option value=\"g-glider\">Gosper's glider gun</option>\n          <option value=\"cloverleaf\">Cloverleaf</option>\n          <option value=\"pulsar\">Pulsar</option>\n\n        </select>\n\n        <button onClick={ ()=> {window.open('https://github.com/DavidMunozMartinez/react-conways-game-of-life')} } className=\"primary-btn\" style={{float: 'right', borderRadius: 5}}> <FiGithub></FiGithub></button>\n      </smart-hover>\n      <CanvasComponent callablesSetter={setCallables}></CanvasComponent>\n    </div>\n  );\n}\n\nexport default App;\n","interface Config {\n  x: number,\n  y: number,\n  speed: number,\n  running: boolean\n};\n\nconst defaultState: Config = {\n  x: 60,\n  y: 40,\n  speed: 150,\n  running: false\n};\n\nexport const configReducer = (state: Config = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    case 'update':\n      let value = action.data.value;\n      if (typeof value === 'boolean') {\n        newState[action.data.prop] = value;\n      }\n      else if (value !== '') {\n        newState[action.data.prop] = parseInt(action.data.value);\n      }\n      return newState;\n    case 'event':\n      newState.event = action.value;\n      return newState;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'smart-hoverjs';\nimport { createStore, } from 'redux';\nimport { Provider } from 'react-redux';\n\n// Reducers\nimport { combineReducers } from 'redux';\nimport { configReducer } from './reducers/ConfigReducer';\n\nlet reducers = combineReducers({\n  config: configReducer\n});\n\nlet store = createStore(reducers);\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'smart-hover': any;\n    }\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}